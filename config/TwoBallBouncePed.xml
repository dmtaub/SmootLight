<!---All configuration items contain a "Class" tag specifying the python class they represent, and an "Args" tag specifying the args to be passed in.-->
<LightInstallation>
    <InstallationConfiguration>
        <Defaults>
            <PixelMapper>simplemap</PixelMapper>
        </Defaults>
    </InstallationConfiguration>
    <PixelConfiguration>
        <InheritsFrom>layouts/60StripLayout.xml</InheritsFrom>
    </PixelConfiguration>
    <PixelMapperConfiguration>
        <PixelMapper>
            <Class>pixelmappers.SimpleMapper</Class>
            <Args>
                <Id>simplemap</Id>
                <CutoffDist>20</CutoffDist>
            </Args>
        </PixelMapper>
        <PixelMapper>
            <Class>pixelmappers.GaussianMapper</Class>
            <Args>
                <Id>gaussmap</Id>
                <CutoffDist>30</CutoffDist>
                <MinWeight>0.1</MinWeight>
                <Width>10</Width>
                <Height>1</Height>
            </Args>
        </PixelMapper>
    </PixelMapperConfiguration>
    <RendererConfiguration>
        <Renderer>
            <InheritsFrom>renderers/60StripSeq.xml</InheritsFrom>
        </Renderer>
        <Renderer>
            <InheritsFrom>renderers/Pygame.xml</InheritsFrom>
        </Renderer>
    </RendererConfiguration>
    <InputConfiguration>
        <InputElement>
            <Class>inputs.PygameInput</Class>
            <Args>
                <Id>pygameclick</Id>
                <RefreshInterval>10</RefreshInterval>
                <Clicks>True</Clicks>
            </Args>
        </InputElement>
        <InputElement>
            <Class>inputs.PygameInput</Class>
            <Args>
                <Id>pygamekey</Id>
                <RefreshInterval>10</RefreshInterval>
                <Keyboard>True</Keyboard>
            </Args>
        </InputElement>
        <InputElement>
            <Class>inputs.UDPInput</Class>
            <Args>
                <Id>udp</Id>
                <Port>3344</Port>
                <RefreshInterval>50</RefreshInterval>
            </Args>
        </InputElement>
        <InputElement>
            <Class>inputs.PedestrianSimulator</Class>
            <Args>
                <Id>pedsim</Id>
                <MaxX>900</MaxX>
                <Velocity>40</Velocity>
                <NumSensors>4</NumSensors>
                <SensorSpacing>48</SensorSpacing>
                <NumPeds>1</NumPeds>
            </Args>
        </InputElement>
         <InputElement>
            <Class>inputs.SensorNetworkToLocation</Class>
            <Args>
                <Id>netloc</Id>
                <SensorNetworkId>pedsim</SensorNetworkId>
                <SensorSpacing>48</SensorSpacing>
            </Args>
        </InputElement>
    </InputConfiguration>

    <BehaviorConfiguration>
        <Behavior Id="recursivedecay" InitialResponseCount="10">
            <Doc>recursive decay for a pixel event - use in a recursive hook</Doc>
            <InheritsFrom>behaviors/LoopAndDie.xml</InheritsFrom>
        </Behavior>
        <Behavior>
            <Class>behaviors.RandomSetBrightColorBehavior</Class>
            <Args>
                <Id>setbrightcolor</Id>
            </Args>
        </Behavior>
        <Behavior Id="decay" Coefficient=".0025">
            <InheritsFrom>behaviors/PixelDecay.xml</InheritsFrom>
        </Behavior>
        <Behavior>
            <Class>behaviors.RestrictLocation</Class>
            <Args>
                <Id>xbounce</Id>
                <Action>'{val}*-1'</Action>
                <ParamName>XStep</ParamName>
                <LocationRestriction>{x}&lt;0 or {x}&gt;800</LocationRestriction>
            </Args>
        </Behavior>
        <Behavior>
            <Class>behaviors.RestrictLocation</Class>
            <Args>
                <Id>ybounce</Id>
                <Action>'{val}*-1'</Action>
                <ParamName>YStep</ParamName>
                <LocationRestriction>{y}&lt;0 or {y}&gt;200</LocationRestriction>
            </Args>
        </Behavior>
       <Behavior>
            <Class>behaviors.BehaviorChain</Class>
            <Args>
                <Id>movebounce</Id>
                <ChainedBehaviors>
                    <Id>move</Id>
                    <Id>ybounce</Id>
                    <Id>xbounce</Id>
                    <Id>recursivedecay</Id>
                </ChainedBehaviors>
            </Args>
        </Behavior>
       <Behavior>
            <Class>behaviors.XYMoveBounceTwo</Class>
            <Args>
                <Id>move</Id>
                <XStep>10</XStep>
        		<YStep>0</YStep>
                <NoBounceTime>100</NoBounceTime>
            </Args>
        </Behavior>
        <Behavior>
            <Class>behaviors.BehaviorChain</Class>
            <Args>
                <Id>runcolordecay</Id>
                <Inputs>
                    <Id>netloc</Id>
                    <Id>pygameclick</Id>
                </Inputs>
                <ChainedBehaviors>
                    <Id>setbrightcolor</Id>
                    <Id>mover</Id>
                    <Id>decay</Id>
                </ChainedBehaviors>
                <RecursiveHooks>{'mover':'movebounce'}</RecursiveHooks>
                <RenderToScreen>True</RenderToScreen>
                <Mapper>gaussmap</Mapper>
            </Args>
        </Behavior>
        <Behavior>
            <Class>behaviors.ResponseMover</Class>
            <Args>
                <Id>mover</Id>
            </Args>
        </Behavior>
    </BehaviorConfiguration>
</LightInstallation>
