<!---All configuration items contain a "Class" tag specifying the python class they represent, and an "Args" tag specifying the args to be passed in.-->
<LightInstallation>
    <InstallationConfiguration>
        <Defaults>
            <PixelMapper>simplemap</PixelMapper>
        </Defaults>
    </InstallationConfiguration>
    <PixelConfiguration>
        <InheritsFrom>layouts/10kLayout/10kLayout.xml</InheritsFrom>
    </PixelConfiguration>
    <PixelMapperConfiguration>
        <PixelMapper>
            <Class>pixelmappers.SimpleMapper</Class>
            <Args>
                <Id>simplemap</Id>
                <CutoffDist>20</CutoffDist>
            </Args>
        </PixelMapper>
        <PixelMapper>
            <Class>pixelmappers.GaussianMapper</Class>
            <Args>
                <Id>gaussmap</Id>
                <CutoffDist>10</CutoffDist>
                <MinWeight>0.1</MinWeight>
                <Width>10</Width>
                <Height>5</Height>
            </Args>
        </PixelMapper>
        <PixelMapper>
            <Class>pixelmappers.PseudoGaussianMapper</Class>
            <Args>
                <Id>windgaussmap</Id>
                <CutoffDist>10</CutoffDist>
                <MinWeight>0.005</MinWeight>
                <Width>10</Width>
                <Height>1</Height>
		<Intensity>1.0</Intensity>
            </Args>
        </PixelMapper>
    </PixelMapperConfiguration>
    <RendererConfiguration>
        <!--<Renderer>
            <InheritsFrom>renderers/Pygame.xml</InheritsFrom>
        </Renderer>-->
        <Renderer>
            <InheritsFrom>renderers/10kRenderer.xml</InheritsFrom>
        </Renderer>
    </RendererConfiguration>
    <InputConfiguration>
        <InputElement>
            <Class>inputs.PygameInput</Class>
            <Args>
                <Id>pygamekey</Id>
                <RefreshInterval>100</RefreshInterval>
                <Keyboard>True</Keyboard>
            </Args>
        </InputElement>
	<InputElement>
	  <Class>inputs.HTMLInput</Class>
	  <Args>
	    <Id>weatherinput</Id>
	    <Src>'http://sailing.mit.edu/weather/'</Src>
	    <!--<Regex>'rtWindSpeed = (\d+).*rtWindDir = (\d+)'</Regex>-->
	    <Regex>'rtWindSpeed = (\d+).*\s.*\s.*rtWindDir = (\d+)'</Regex>
	    <RefreshInterval>30000</RefreshInterval>
	  </Args>
	</InputElement>
        <InputElement>
            <Class>inputs.RandomLocs</Class>
            <Args>
                <Id>randomLoc</Id>
		<MaxX>1000</MaxX>
		<MaxY>100</MaxY>		   
		<RefreshInterval>2000</RefreshInterval>
            </Args>
        </InputElement>
    </InputConfiguration>
    <BehaviorConfiguration>
	<Behavior Id="staticcolor">
            <InheritsFrom>behaviors/RandomColor.xml</InheritsFrom>
	    <Args>
            	<ColorList>
			<Val>(100,200,255)</Val>
			<Val>(50,200,255)</Val>
			<Val>(0,200,255)</Val>
			<Val>(0,150,255)</Val>
		</ColorList>
	    </Args>
	</Behavior>
        <Behavior Id="decay">
            <InheritsFrom>behaviors/PixelDecay.xml</InheritsFrom>
	    <Args>
	      <Coefficient>0.02</Coefficient>
	    </Args>
        </Behavior>

        <Behavior>
            <Class>behaviors.XYMove</Class>
            <Args>
                <Id>xymove</Id>
                <XStep>5</XStep>
                <YStep>0</YStep>
            </Args>
        </Behavior>
        <Behavior>
            <Class>behaviors.BehaviorChain</Class>
            <Args>		
                <Id>movebounce</Id>
                <ChainedBehaviors>
                    <Id>xymove</Id>
                    <Id>timeout</Id>
                </ChainedBehaviors>
            </Args>
        </Behavior>
        <Behavior>
            <Class>behaviors.Timeout</Class>
            <Args>
                <Id>timeout</Id>
                <Timeout>20000</Timeout>
            </Args>
        </Behavior>

        <Behavior>
            <Class>behaviors.ResponseMover</Class>
            <Args>
                <Id>mover</Id>
            </Args>
        </Behavior>
	<Behavior>
	    <Class>behaviors.SmootWind</Class>    
	    <Args>
		<Id>smootwind</Id>		
	    </Args>
	</Behavior>
        <Behavior>
            <Class>behaviors.BehaviorChain</Class>
            <Args>
                <Id>xymover</Id>
                <Inputs>
		    <Id>randomLoc</Id>
		    <Id>weatherinput</Id>
		</Inputs>
                <ChainedBehaviors>
		    <Id>smootwind</Id>
                    <Id>staticcolor</Id>
                    <Id>mover</Id>
                    <Id>decay</Id>
                </ChainedBehaviors>
                <RecursiveHooks>{'mover':'movebounce'}</RecursiveHooks>
                <RenderToScreen>True</RenderToScreen>
                <Mapper>windgaussmap</Mapper>
           </Args>
       </Behavior>
    </BehaviorConfiguration>
</LightInstallation>
