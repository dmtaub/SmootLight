<!---All configuration items contain a "Class" tag specifying the python class they represent, and an "Args" tag specifying the args to be passed in.-->
<LightInstallation>
    <InstallationConfiguration>
        <Defaults>
            <PixelMapper>simplemap</PixelMapper>
        </Defaults>
    </InstallationConfiguration>
    <PixelConfiguration>
        <InheritsFrom>layouts/10kLayout/10kLayout.xml</InheritsFrom>
<!--            <InheritsFrom>layouts/60StripLayout.xml</InheritsFrom> -->
    </PixelConfiguration>
    <PixelMapperConfiguration>
        <PixelMapper>
            <Class>pixelmappers.SimpleMapper</Class>
            <Args>
                <Id>simplemap</Id>
                <CutoffDist>20</CutoffDist>
            </Args>
        </PixelMapper>
        <PixelMapper>
            <Class>pixelmappers.GaussianMapper</Class>
            <Args>
                <Id>gaussmap</Id>
                <CutoffDist>30</CutoffDist>
                <MinWeight>0.1</MinWeight>
                <Width>10</Width>
                <Height>1</Height>
            </Args>
        </PixelMapper>
    </PixelMapperConfiguration>
    <RendererConfiguration>
<Renderer>
    <Class>renderers.PygameRenderer</Class>
    <Args>
        <Id>pygamerender</Id>
        <Size>(1200, 50)</Size>
    </Args>
</Renderer>
    </RendererConfiguration>
    <InputConfiguration>
        <InputElement>
            <Class>inputs.LeftEdgeInput</Class>
            <Args>
                <Id>leftedge</Id>
            </Args>
        </InputElement>
        <InputElement>
            <Class>inputs.PygameInput</Class>
            <Args>
                <Id>pygameclick</Id>
                <RefreshInterval>10</RefreshInterval>
                <Clicks>True</Clicks>
            </Args>
        </InputElement>
        <InputElement>
            <Class>inputs.PygameInput</Class>
            <Args>
                <Id>pygamekey</Id>
                <RefreshInterval>10</RefreshInterval>
                <Keyboard>True</Keyboard>
            </Args>
        </InputElement>
        <InputElement>
            <Class>inputs.UDPInput</Class>
            <Args>
                <Id>udp</Id>
                <Port>3344</Port>
                <RefreshInterval>50</RefreshInterval>
            </Args>
        </InputElement>
        <InputElement>
            <Class>inputs.PedestrianSimulator</Class>
            <Args>
                <Id>pedsim</Id>
                <MaxX>1200</MaxX>
                <Velocity>40</Velocity>
                <NumSensors>40</NumSensors>
                <SensorSpacing>48</SensorSpacing>
                <NumPeds>1</NumPeds>
            </Args>
        </InputElement>
         <InputElement>
            <Class>inputs.SensorNetworkToLocation</Class>
            <Args>
                <Id>netloc</Id>
                <SensorNetworkId>pedsim</SensorNetworkId>
                <SensorSpacing>48</SensorSpacing>
            </Args>
        </InputElement>
        <InputElement>
            <Class>inputs.DirectionalPedestrians</Class>
            <Args>
                <Id>dirped</Id>
                <LocSensorId>netloc</LocSensorId>
            </Args>
        </InputElement>
 
    </InputConfiguration>

    <BehaviorConfiguration>
    <Behavior Id='accelerate'>
        <Class>behaviors.ModifyParam</Class>
        <Args>
            <ParamType>Sensor</ParamType>
            <ParamName>XStep</ParamName>
            <ParamOp>'{val}*1.1'</ParamOp>
        </Args>
    </Behavior>
        <Behavior Id="recursivedecay" InitialResponseCount="25">
            <Doc>recursive decay for a pixel event - use in a recursive hook</Doc>
            <InheritsFrom>behaviors/LoopAndDie.xml</InheritsFrom>
        </Behavior>
        <Behavior>
            <Class>behaviors.RandomSetBrightColorBehavior</Class>
            <Args>
                <Id>setbrightcolor</Id>
            </Args>
        </Behavior>
        <Behavior>
            <Class>behaviors.RandomSetBrightColorBehavior</Class>
            <Args>
                <Id>setbrightcolor2</Id>
            </Args>
        </Behavior>

        <Behavior Id="decay" Coefficient=".0025">
            <InheritsFrom>behaviors/PixelDecay.xml</InheritsFrom>
        </Behavior>
        <Behavior Id="decay2" Coefficient=".025">
            <InheritsFrom>behaviors/PixelDecay.xml</InheritsFrom>
        </Behavior>
       <Behavior>
            <Class>behaviors.BehaviorChain</Class>
            <Args>
                <Id>movebounce</Id>
                <ChainedBehaviors>
                    <Id>move</Id>
                    <Id>accelerate</Id>
                    <Id>recursivedecay</Id>
                </ChainedBehaviors>
            </Args>
        </Behavior>
       <Behavior>
            <Class>behaviors.GrowNear</Class>
            <Args>
                <Id>grow</Id>
            </Args>
        </Behavior>
      <Behavior>
            <Class>behaviors.XYMoveBounceDirOne</Class>
            <Args>
                <Id>move</Id>
                <XStep>10</XStep>
        		<YStep>0</YStep>
                <NoBounceTime>100</NoBounceTime>
            </Args>
        </Behavior>
        <Behavior>
            <Class>behaviors.BehaviorChain</Class>
            <Args>
                <Id>runcolordecay</Id>
                <Inputs>
                    <Id>dirped</Id>
                </Inputs>
                <ChainedBehaviors>
                    <Id>setbrightcolor</Id>
                    <Id>mover</Id>
                    <Id>decay</Id>
                </ChainedBehaviors>
                <RecursiveHooks>{'mover':'movebounce'}</RecursiveHooks>
                <RenderToScreen>True</RenderToScreen>
                <Mapper>gaussmap</Mapper>
            </Args>
        </Behavior>
       <Behavior>
            <Class>behaviors.FillupBar</Class>
            <Args>
                <Id>fbar</Id>
            </Args>
        </Behavior>
        <Behavior>
            <Class>behaviors.BehaviorChain</Class>
            <Args>
                <Id>fillupleft</Id>
                <Inputs>
                    <Id>leftedge</Id>
                </Inputs>
                <ChainedBehaviors>
                    <Id>setbrightcolor2</Id>
                    <Id>mover2</Id>
                    <Id>fbar</Id>
                    <Id>decay2</Id>
                </ChainedBehaviors>
                <RecursiveHooks>{'mover2':'grow'}</RecursiveHooks>
                <RenderToScreen>True</RenderToScreen>
                <Mapper>simplemap</Mapper>
            </Args>
        </Behavior>
        <Behavior>
            <Class>behaviors.ResponseMover</Class>
            <Args>
                <Id>mover</Id>
            </Args>
        </Behavior>
         <Behavior>
            <Class>behaviors.ResponseMover</Class>
            <Args>
                <Id>mover2</Id>
            </Args>
        </Behavior>
    </BehaviorConfiguration>
</LightInstallation>
